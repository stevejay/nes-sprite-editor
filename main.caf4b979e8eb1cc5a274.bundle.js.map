{"version":3,"file":"main.caf4b979e8eb1cc5a274.bundle.js","sources":["webpack:///./src/shared/SelectInput/SelectInput.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport { isEmpty, isNil } from \"lodash\";\nimport React from \"react\";\nimport styles from \"./SelectInput.module.scss\";\n\nexport type Option<IdT> = {\n  id: IdT;\n  label: string;\n};\n\ntype Props<IdT> = {\n  id?: string;\n  options: Array<Option<IdT>>;\n  value: IdT | null;\n  name?: string;\n  disabled?: boolean;\n  onChange: (id: IdT) => void;\n  className?: string;\n};\n\nconst SelectInput = <P extends string | number>({\n  id,\n  name,\n  options,\n  value,\n  disabled = false,\n  onChange,\n  className = \"\"\n}: Props<P>) => {\n  const showDisabled = disabled || isNil(value) || isEmpty(options);\n\n  const containerClassNames = classNames(styles.container, className, {\n    [styles.disabled]: showDisabled\n  });\n\n  return (\n    <div className={containerClassNames}>\n      <select\n        id={id}\n        name={name}\n        value={value || undefined}\n        onChange={event => onChange(event.target.value as P)}\n        disabled={showDisabled}\n        tabIndex={0}\n      >\n        {options.map(option => (\n          <option key={option.id} value={option.id}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default SelectInput;\n"],"mappings":"AAuDA","sourceRoot":""}